﻿@using System.Text.Json
@model BOCS.ModelsView.CourseInfoVM
@{
    ViewData["Title"] = "Course Info";
    var playMap = ViewBag.LessonPlay as IDictionary<string, bool> ?? new Dictionary<string, bool>();
    var isEnrolled = (bool)ViewBag.isEnrolled;
    bool isAdmin = User.IsInRole("Admin");
    var idx = 0;
    // initialId: Controller থেকে এলো (শুধু play-able হলে সেট করা)
    var initialId = Model.LatestYoutubeId
        ?? Model.Outlines.SelectMany(g => g.Items).FirstOrDefault()?.YoutubeId
        ?? "";

    var firstLessionId = Model.firstLessionId;
}

<section class="container py-4 lock-copy">
    <div class="mb-2 text-muted">Courses Lesson List</div>
    <div class="row g-3">
        <div class="col-lg-4">
            <h5 class="mt-3"><u>Course Outlines:</u></h5>
            <div class="accordion" id="outlineAcc">
                @for (var gi = 0; gi < Model.Outlines.Count; gi++)
                {
                    var g = Model.Outlines[gi];
                    var cid = $"collapse_{gi}";
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="heading_@gi">
                            <button class="accordion-button collapsed" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#@cid"
                                    aria-expanded="false" aria-controls="@cid">
                                @g.Title
                            </button>
                        </h2>
                        <div id="@cid" class="accordion-collapse collapse" data-bs-parent="#outlineAcc">
                            <div class="accordion-body p-0">
                                <ul class="list-group list-group-flush">
                                    @foreach (var item in g.Items)
                                    {
                                        var yt = item.YoutubeId ?? "";
                                        var canPlay = playMap.TryGetValue(yt, out var v) && v;
                                        if (!isEnrolled)
                                        {
                                            canPlay = false;
                                        }
                                        var isActive = yt == initialId;

                                        <li class="list-group-item d-flex justify-content-between align-items-center lesson-item @(isActive ? "active" : "") @(canPlay? "" : "disabled-lesson")"
                                            data-idx="@idx" data-yt="@yt" data-canplay="@(canPlay.ToString().ToLower())" data-lesson-id="@item.LessionId" data-subject="@g.Title" data-lesson="@item.Label"
                                            role="button" tabindex="0">
                                            <span class="text-truncate">@item.Label</span>
                                            <i class="bi bi-play-circle"></i>
                                        </li>
                                        idx++;
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-lg-8 ms-lg-auto text-end">
        
        <div>

            <div class="d-flex justify-content-between align-items-start mb-3">
                
                <h4 class="mb-2">@Model.Title</h4>
            </div>
                <div id="videoShell" class="video-shell ratio ratio-16x9 mb-3 position-relative">
                    <div id="player"></div>
                    <div id="videoGuard" class="video-guard"></div>
                </div>

                <!-- Custom Controls -->
                <div class="mt-2">
                    <button id="customPlay" class="btn btn-success btn-sm">▶ Play</button>
                    <button id="customPause" class="btn btn-danger btn-sm">⏸ Pause</button>
                    <button id="seekBackward" class="btn btn-secondary btn-sm">⏪ -10s</button>
                    <button id="seekForward" class="btn btn-secondary btn-sm">⏩ +10s</button>
                    <button id="volumeDown" class="btn btn-warning btn-sm">🔉 -</button>
                    <button id="volumeUp" class="btn btn-warning btn-sm">🔊 +</button>
                    <button id="muteToggle" class="btn btn-dark btn-sm">🔇 Mute/Unmute</button>
                </div>
        </div>
           

            <div class="d-flex justify-content-between align-items-start mb-3">
                <div class="col-lg-9 align-items-start">
                    <h4 class="mb-2">
                        <span id="lessonTitle"></span>
                    </h4>
                    <div class="text-muted">Created by: @Model.CreatedBy</div>
                </div>
                <div class=" text-end">
                    <div class="mb-2"><span class="fw-semibold me-1">Duration:</span> @Model.DurationDays days</div>
                    <div><span class="fw-semibold me-1">Price:</span> ৳ @Model.PriceBdt.ToString("N0") BDT</div>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            @if (isEnrolled)
            {
                <div id="attachments-container" class="mt-4">
                    <h5 class="mb-3">Course Materials</h5>
                    <p class="text-muted">Loading materials...</p>
                </div>
            }
        </div>
    </div>
</section>

<input type="hidden" id="IS_ADMIN_FLAG" value="@(isAdmin ? "true" : "false")" />



@section Scripts {
    <script src="https://www.youtube.com/iframe_api"></script>
    <script src="~/js/course-info.js" asp-append-version="true"></script>

    <link href="~/css/protect-course-info.css" rel="stylesheet" />
    <script src="~/js/protect-course-info.js" asp-append-version="true"></script>
    <!-- প্লেয়ার যে আইডি দিয়ে শুরু করবে -->
    <script id="INITIAL_ID" type="application/json">
        @Html.Raw(JsonSerializer.Serialize(initialId))
    </script>
    <!-- (প্রয়োজন হলে) লেসন আইডিগুলোর তালিকা -->
    <script id="LESSON_IDS_DATA" type="application/json">
        @Html.Raw(JsonSerializer.Serialize(Model.LessonIds ?? new List<string>()))
    </script>
    <!-- প্লেয়ার/নেভিগেশন স্ক্রিপ্টগুলো -->
    <script src="~/js/course-info.bootstrap.js" asp-append-version="true"></script>
    <!-- ক্লিক-গার্ড (CSP safe: external file) -->
    <script src="~/js/course-play-guard.js" asp-append-version="true"></script>

    <!-- Attachments Viewer -->
    <script src="~/js/course-attachments-viewer.js" asp-append-version="true"></script>

    <!-- Image Viewer Modal -->
    <div class="modal fade" id="imageViewerModal" tabindex="-1" aria-labelledby="imageViewerModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="imageViewerModalLabel">Image Viewer</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <button type="button" class="btn btn-outline-secondary" id="prevImageBtn">
                            <i class="bi bi-chevron-left"></i> Previous
                        </button>
                        <div>
                            <p id="imageCounter" class="mb-1 fw-bold"></p>
                            <p id="imageName" class="mb-0 text-muted small"></p>
                        </div>
                        <button type="button" class="btn btn-outline-secondary" id="nextImageBtn">
                            Next <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                    <div style="height: 60vh; display: flex; align-items: center; justify-content: center;">
                        <img id="modalImage" src="" alt="" style="max-height: 100%; max-width: 100%; object-fit: contain;">
                    </div>
                </div>
            </div>
        </div>
    </div>
}
